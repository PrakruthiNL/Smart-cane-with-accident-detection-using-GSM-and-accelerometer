#include <AltSoftSerial.h>
#include <SoftwareSerial.h>
#include <math.h>

AltSoftSerial neogps;
SoftwareSerial sim800(2, 3); // RX, TX

byte updateflag;

int xaxis = 0, yaxis = 0, zaxis = 0;
int deltx = 0, delty = 0, deltz = 0;
int vibration = 2, devibrate = 75;
int magnitude = 0;
int sensitivity = 150;
boolean impact_detected = false;

unsigned long time1;
unsigned long impact_time;
unsigned long alert_delay = 10000; // 10 seconds

const String EMERGENCY_PHONE = "+918088255878"; // Your phone number

void makeCall();
void sendAlert();
void sendSms(String text);
void Impact();

// Ultrasonic Sensor Pins
#define TRIGGER_PIN 2
#define ECHO_PIN 3
#define BUZZER_PIN 4
#define MAX_DISTANCE 200
#define DISTANCE_THRESHOLD 20

void setup() {
  Serial.begin(9600);
  sim800.begin(9600);
  neogps.begin(9600);

  delay(2000); // Initial delay after power-up

  // Additional initialization commands for SIM800A
  sim800.println("AT+CFUN=1"); // Set full functionality
  delay(1000);
  sim800.println("AT+CMGF=1"); // SMS text mode
  delay(1000);
  sim800.println("AT+CNMI=2,2,0,0,0"); // Decides how newly arrived SMS should be handled
  delay(1000);

  time1 = micros(); 

  xaxis = analogRead(A1);
  yaxis = analogRead(A2);
  zaxis = analogRead(A3);

  pinMode(TRIGGER_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  pinMode(BUZZER_PIN, OUTPUT);
}

void loop() {
  // Accident detection part
  if (micros() - time1 > 1999) Impact();

  if (updateflag > 0) 
  {
    updateflag = 0;
    Serial.println("Impact detected!!");
    Serial.print("Magnitude:"); Serial.println(magnitude);

    impact_detected = true;
    impact_time = millis();
  }
  
  if (impact_detected == true)
  {
    if (millis() - impact_time >= alert_delay) {
      makeCall();
      delay(1000);
      sendAlert();
      impact_detected = false;
      impact_time = 0;
    }
  }

  // Clear any incoming data on the SIM800 module
  while (sim800.available()){
    sim800.readString();
  }

  // Pass data from Serial to SIM800 (for debugging)
  while (Serial.available()) {
    sim800.println(Serial.readString());
  }

  // Obstacle detection part
  long duration, distance;

  // Clear the trigger pin
  digitalWrite(TRIGGER_PIN, LOW);
  delayMicroseconds(2);

  // Send a 10us pulse to trigger the sensor
  digitalWrite(TRIGGER_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIGGER_PIN, LOW);

  // Measure the pulse input from ECHO pin
  duration = pulseIn(ECHO_PIN, HIGH);

  // Calculate distance in cm
  distance = duration * 0.034 / 2;

  // Check if an obstacle is within the threshold distance
  if (distance <= DISTANCE_THRESHOLD && distance > 0) {
    Serial.print("Obstacle Detected! Distance: ");
    Serial.print(distance);
    Serial.println(" cm");
    digitalWrite(BUZZER_PIN, HIGH); // Sound the buzzer
  } else {
    Serial.println("Obstacle Not Detected");
    digitalWrite(BUZZER_PIN, LOW); // Stop the buzzer
  }

  delay(100); // Wait for a short duration before next reading
}

void Impact() {
  time1 = micros();

  int oldx = xaxis;
  int oldy = yaxis;
  int oldz = zaxis;

  xaxis = analogRead(A1);
  yaxis = analogRead(A2);
  zaxis = analogRead(A3);

  vibration--; 
  if (vibration < 0) vibration = 0;                                
  
  if (vibration > 0) return;

  deltx = xaxis - oldx;                                           
  delty = yaxis - oldy;
  deltz = zaxis - oldz;
  
  magnitude = sqrt(sq(deltx) + sq(delty) + sq(deltz));

  if (magnitude >= sensitivity) 
  {
    updateflag = 1;
    vibration = devibrate;
  }
  else
  {
    magnitude = 0;
  }
}

void makeCall() {
  Serial.println("Calling....");
  sim800.println("ATD"+EMERGENCY_PHONE+";");
  delay(20000); // 20 sec delay
  sim800.println("ATH");
  Serial.println("Call ended.");
}

void sendAlert() {
  sendSms("Accident Alert!! Your blind person got into an accident. Please go to save him.");
}

void sendSms(String text) {
  sim800.print("AT+CMGF=1\r");
  delay(1000);
  sim800.print("AT+CMGS=\""+EMERGENCY_PHONE+"\"\r");
  delay(1000);
  sim800.print(text);
  delay(100);
  sim800.write(0x1A);
  delay(1000);
  Serial.println("SMS Sent Successfully.");
}
